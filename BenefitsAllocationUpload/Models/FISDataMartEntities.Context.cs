//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BenefitsAllocationUpload.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class FISDataMartEntities1 : DbContext
    {
        public FISDataMartEntities1()
            : base("name=FISDataMartEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<UnitFile> UnitFiles { get; set; }
    
        [EdmFunction("FISDataMartEntities1", "udf_TrueFalseSelectionList")]
        public virtual IQueryable<udf_TrueFalseSelectionList_Result> udf_TrueFalseSelectionList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_TrueFalseSelectionList_Result>("[FISDataMartEntities1].[udf_TrueFalseSelectionList]()");
        }
    
        public virtual ObjectResult<BudgetAdjustmentUploadDataResults> usp_GetBudgetAdjustmentUploadDataForOrg(string fiscalYear, string fiscalPeriod, string transDescription, string orgDocNumber, string orgRefId, string transDocNumberSequence, string orgId, string transDocOriginCode, Nullable<bool> useDaFIS, Nullable<bool> isDebug)
        {
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(string));
    
            var fiscalPeriodParameter = fiscalPeriod != null ?
                new ObjectParameter("FiscalPeriod", fiscalPeriod) :
                new ObjectParameter("FiscalPeriod", typeof(string));
    
            var transDescriptionParameter = transDescription != null ?
                new ObjectParameter("TransDescription", transDescription) :
                new ObjectParameter("TransDescription", typeof(string));
    
            var orgDocNumberParameter = orgDocNumber != null ?
                new ObjectParameter("OrgDocNumber", orgDocNumber) :
                new ObjectParameter("OrgDocNumber", typeof(string));
    
            var orgRefIdParameter = orgRefId != null ?
                new ObjectParameter("OrgRefId", orgRefId) :
                new ObjectParameter("OrgRefId", typeof(string));
    
            var transDocNumberSequenceParameter = transDocNumberSequence != null ?
                new ObjectParameter("TransDocNumberSequence", transDocNumberSequence) :
                new ObjectParameter("TransDocNumberSequence", typeof(string));
    
            var orgIdParameter = orgId != null ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(string));
    
            var transDocOriginCodeParameter = transDocOriginCode != null ?
                new ObjectParameter("TransDocOriginCode", transDocOriginCode) :
                new ObjectParameter("TransDocOriginCode", typeof(string));
    
            var useDaFISParameter = useDaFIS.HasValue ?
                new ObjectParameter("UseDaFIS", useDaFIS) :
                new ObjectParameter("UseDaFIS", typeof(bool));
    
            var isDebugParameter = isDebug.HasValue ?
                new ObjectParameter("IsDebug", isDebug) :
                new ObjectParameter("IsDebug", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BudgetAdjustmentUploadDataResults>("usp_GetBudgetAdjustmentUploadDataForOrg", fiscalYearParameter, fiscalPeriodParameter, transDescriptionParameter, orgDocNumberParameter, orgRefIdParameter, transDocNumberSequenceParameter, orgIdParameter, transDocOriginCodeParameter, useDaFISParameter, isDebugParameter);
        }
    
        public virtual int usp_GetOrgLevel(string orgId, Nullable<bool> isDebug, ObjectParameter orgLevel)
        {
            var orgIdParameter = orgId != null ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(string));
    
            var isDebugParameter = isDebug.HasValue ?
                new ObjectParameter("IsDebug", isDebug) :
                new ObjectParameter("IsDebug", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetOrgLevel", orgIdParameter, isDebugParameter, orgLevel);
        }
    }
}
