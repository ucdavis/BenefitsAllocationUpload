//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data;
using System.Data.SqlClient;

namespace BenefitsAllocationUpload.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class FISDataMartEntities : DbContext
    {
        public FISDataMartEntities()
            : base("name=FISDataMartEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Catbert3_vLogin> Catbert3_vLogin { get; set; }
        public DbSet<Catbert3_vSchools> Catbert3_vSchools { get; set; }
        public DbSet<PPSDataMart_vSchools> PPSDataMart_vSchools { get; set; }
        public DbSet<UnitFile> UnitFiles { get; set; }
    
        [EdmFunction("FISDataMartEntities", "udf_GetBudgetAdjustmentUploadData")]
        public virtual IQueryable<udf_GetBudgetAdjustmentUploadData_Result> udf_GetBudgetAdjustmentUploadData(string fiscalYear, string fiscalPeriod, string transDescription, string orgDocNumber, string orgRefId, string transDocNumberSequence)
        {
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(string));
    
            var fiscalPeriodParameter = fiscalPeriod != null ?
                new ObjectParameter("FiscalPeriod", fiscalPeriod) :
                new ObjectParameter("FiscalPeriod", typeof(string));
    
            var transDescriptionParameter = transDescription != null ?
                new ObjectParameter("TransDescription", transDescription) :
                new ObjectParameter("TransDescription", typeof(string));
    
            var orgDocNumberParameter = orgDocNumber != null ?
                new ObjectParameter("OrgDocNumber", orgDocNumber) :
                new ObjectParameter("OrgDocNumber", typeof(string));
    
            var orgRefIdParameter = orgRefId != null ?
                new ObjectParameter("OrgRefId", orgRefId) :
                new ObjectParameter("OrgRefId", typeof(string));
    
            var transDocNumberSequenceParameter = transDocNumberSequence != null ?
                new ObjectParameter("TransDocNumberSequence", transDocNumberSequence) :
                new ObjectParameter("TransDocNumberSequence", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_GetBudgetAdjustmentUploadData_Result>("[FISDataMartEntities].[udf_GetBudgetAdjustmentUploadData](@FiscalYear, @FiscalPeriod, @TransDescription, @OrgDocNumber, @OrgRefId, @TransDocNumberSequence)", fiscalYearParameter, fiscalPeriodParameter, transDescriptionParameter, orgDocNumberParameter, orgRefIdParameter, transDocNumberSequenceParameter);
        }
    
        [EdmFunction("FISDataMartEntities", "udf_Catbert3_UserRoles")]
        public virtual IQueryable<udf_Catbert3_UserRoles_Result> udf_Catbert3_UserRoles(string applicationsAbbr)
        {
            var applicationsAbbrParameter = applicationsAbbr != null ?
                new ObjectParameter("applicationsAbbr", applicationsAbbr) :
                new ObjectParameter("applicationsAbbr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_Catbert3_UserRoles_Result>("[FISDataMartEntities].[udf_Catbert3_UserRoles](@applicationsAbbr)", applicationsAbbrParameter);
        }
    
        [EdmFunction("FISDataMartEntities", "udf_Catbert3_vRoles")]
        public virtual IQueryable<udf_Catbert3_vRoles_Result> udf_Catbert3_vRoles(string applicationAbbr)
        {
            var applicationAbbrParameter = applicationAbbr != null ?
                new ObjectParameter("applicationAbbr", applicationAbbr) :
                new ObjectParameter("applicationAbbr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_Catbert3_vRoles_Result>("[FISDataMartEntities].[udf_Catbert3_vRoles](@applicationAbbr)", applicationAbbrParameter);
        }
    
        [EdmFunction("FISDataMartEntities", "udf_Catbert3_vUnit")]
        public virtual IQueryable<udf_Catbert3_vUnit_Result> udf_Catbert3_vUnit(string applicationAbbr)
        {
            var applicationAbbrParameter = applicationAbbr != null ?
                new ObjectParameter("applicationAbbr", applicationAbbr) :
                new ObjectParameter("applicationAbbr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_Catbert3_vUnit_Result>("[FISDataMartEntities].[udf_Catbert3_vUnit](@applicationAbbr)", applicationAbbrParameter);
        }
    
        [EdmFunction("FISDataMartEntities", "udf_Catbert3_vUsers")]
        public virtual IQueryable<udf_Catbert3_vUsers_Result> udf_Catbert3_vUsers(string applicationsAbbr)
        {
            var applicationsAbbrParameter = applicationsAbbr != null ?
                new ObjectParameter("applicationsAbbr", applicationsAbbr) :
                new ObjectParameter("applicationsAbbr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_Catbert3_vUsers_Result>("[FISDataMartEntities].[udf_Catbert3_vUsers](@applicationsAbbr)", applicationsAbbrParameter);
        }
    
        [EdmFunction("FISDataMartEntities", "udf_Catbert3_vUserUnits")]
        public virtual IQueryable<udf_Catbert3_vUserUnits_Result> udf_Catbert3_vUserUnits(string applicationsAbbr)
        {
            var applicationsAbbrParameter = applicationsAbbr != null ?
                new ObjectParameter("applicationsAbbr", applicationsAbbr) :
                new ObjectParameter("applicationsAbbr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_Catbert3_vUserUnits_Result>("[FISDataMartEntities].[udf_Catbert3_vUserUnits](@applicationsAbbr)", applicationsAbbrParameter);
        }

        [EdmFunction("FISDataMartModel.Store", "udf_GetOrgIdForSchoolCode")]
        public virtual string udf_GetOrgIdForSchoolCode(string schoolCode)
        {
            var schoolCodeParameter = schoolCode != null ?
               new SqlParameter("schoolCode", schoolCode) :
               new SqlParameter("schoolCode", typeof(string));

            if (schoolCode == null)
                return null;

            using (var context = new FISDataMartEntities())
            {
                //var result = context.Database.SqlQuery<string>(
                //"SELECT DISTINCT OrgId FROM dbo.CentralAccounts WHERE SchoolCode = @schoolCode", schoolCodeParameter
                //);
                var result = context.Database.SqlQuery<string>(
                "SELECT dbo.udf_GetOrgIdForSchoolCode(@schoolCode)", schoolCodeParameter
                );

            return result.FirstOrDefault();
            }
        }
    
        public virtual ObjectResult<BudgetAdjustmentUploadDataResults> usp_GetBudgetAdjustmentUploadData(string fiscalYear, string fiscalPeriod, string transDescription, string orgDocNumber, string orgRefId, string transDocNumberSequence, string collegeLevelOrg, string divisionLevelOrgs, string transDocOriginCode, Nullable<bool> useDaFIS, Nullable<bool> isDebug)
        {
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(string));
    
            var fiscalPeriodParameter = fiscalPeriod != null ?
                new ObjectParameter("FiscalPeriod", fiscalPeriod) :
                new ObjectParameter("FiscalPeriod", typeof(string));
    
            var transDescriptionParameter = transDescription != null ?
                new ObjectParameter("TransDescription", transDescription) :
                new ObjectParameter("TransDescription", typeof(string));
    
            var orgDocNumberParameter = orgDocNumber != null ?
                new ObjectParameter("OrgDocNumber", orgDocNumber) :
                new ObjectParameter("OrgDocNumber", typeof(string));
    
            var orgRefIdParameter = orgRefId != null ?
                new ObjectParameter("OrgRefId", orgRefId) :
                new ObjectParameter("OrgRefId", typeof(string));
    
            var transDocNumberSequenceParameter = transDocNumberSequence != null ?
                new ObjectParameter("TransDocNumberSequence", transDocNumberSequence) :
                new ObjectParameter("TransDocNumberSequence", typeof(string));
    
            var collegeLevelOrgParameter = collegeLevelOrg != null ?
                new ObjectParameter("CollegeLevelOrg", collegeLevelOrg) :
                new ObjectParameter("CollegeLevelOrg", typeof(string));
    
            var divisionLevelOrgsParameter = divisionLevelOrgs != null ?
                new ObjectParameter("DivisionLevelOrgs", divisionLevelOrgs) :
                new ObjectParameter("DivisionLevelOrgs", typeof(string));
    
            var transDocOriginCodeParameter = transDocOriginCode != null ?
                new ObjectParameter("TransDocOriginCode", transDocOriginCode) :
                new ObjectParameter("TransDocOriginCode", typeof(string));
    
            var useDaFISParameter = useDaFIS.HasValue ?
                new ObjectParameter("UseDaFIS", useDaFIS) :
                new ObjectParameter("UseDaFIS", typeof(bool));
    
            var isDebugParameter = isDebug.HasValue ?
                new ObjectParameter("IsDebug", isDebug) :
                new ObjectParameter("IsDebug", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BudgetAdjustmentUploadDataResults>("usp_GetBudgetAdjustmentUploadData", fiscalYearParameter, fiscalPeriodParameter, transDescriptionParameter, orgDocNumberParameter, orgRefIdParameter, transDocNumberSequenceParameter, collegeLevelOrgParameter, divisionLevelOrgsParameter, transDocOriginCodeParameter, useDaFISParameter, isDebugParameter);
        }
    
        public virtual ObjectResult<udf_GetBudgetAdjustmentUploadData_Result> GetBudgetAdjustmentUploadData(string fiscalYear, string fiscalPeriod, string transDescription, string orgDocNumber, string orgRefId, string transDocNumberSequence, string collegeLevelOrg, string divisionLevelOrgs, string transDocOriginCode, Nullable<bool> useDaFIS, Nullable<bool> isDebug)
        {
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(string));
    
            var fiscalPeriodParameter = fiscalPeriod != null ?
                new ObjectParameter("FiscalPeriod", fiscalPeriod) :
                new ObjectParameter("FiscalPeriod", typeof(string));
    
            var transDescriptionParameter = transDescription != null ?
                new ObjectParameter("TransDescription", transDescription) :
                new ObjectParameter("TransDescription", typeof(string));
    
            var orgDocNumberParameter = orgDocNumber != null ?
                new ObjectParameter("OrgDocNumber", orgDocNumber) :
                new ObjectParameter("OrgDocNumber", typeof(string));
    
            var orgRefIdParameter = orgRefId != null ?
                new ObjectParameter("OrgRefId", orgRefId) :
                new ObjectParameter("OrgRefId", typeof(string));
    
            var transDocNumberSequenceParameter = transDocNumberSequence != null ?
                new ObjectParameter("TransDocNumberSequence", transDocNumberSequence) :
                new ObjectParameter("TransDocNumberSequence", typeof(string));
    
            var collegeLevelOrgParameter = collegeLevelOrg != null ?
                new ObjectParameter("CollegeLevelOrg", collegeLevelOrg) :
                new ObjectParameter("CollegeLevelOrg", typeof(string));
    
            var divisionLevelOrgsParameter = divisionLevelOrgs != null ?
                new ObjectParameter("DivisionLevelOrgs", divisionLevelOrgs) :
                new ObjectParameter("DivisionLevelOrgs", typeof(string));
    
            var transDocOriginCodeParameter = transDocOriginCode != null ?
                new ObjectParameter("TransDocOriginCode", transDocOriginCode) :
                new ObjectParameter("TransDocOriginCode", typeof(string));
    
            var useDaFISParameter = useDaFIS.HasValue ?
                new ObjectParameter("UseDaFIS", useDaFIS) :
                new ObjectParameter("UseDaFIS", typeof(bool));
    
            var isDebugParameter = isDebug.HasValue ?
                new ObjectParameter("IsDebug", isDebug) :
                new ObjectParameter("IsDebug", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<udf_GetBudgetAdjustmentUploadData_Result>("GetBudgetAdjustmentUploadData", fiscalYearParameter, fiscalPeriodParameter, transDescriptionParameter, orgDocNumberParameter, orgRefIdParameter, transDocNumberSequenceParameter, collegeLevelOrgParameter, divisionLevelOrgsParameter, transDocOriginCodeParameter, useDaFISParameter, isDebugParameter);
        }
    
        public virtual ObjectResult<BudgetAdjustmentUploadDataResults> usp_GetBudgetAdjustmentUploadDataForOrg(string fiscalYear, string fiscalPeriod, string transDescription, string orgDocNumber, string orgRefId, string transDocNumberSequence, string orgId, string transDocOriginCode, Nullable<bool> useDaFIS, Nullable<bool> isDebug)
        {
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(string));
    
            var fiscalPeriodParameter = fiscalPeriod != null ?
                new ObjectParameter("FiscalPeriod", fiscalPeriod) :
                new ObjectParameter("FiscalPeriod", typeof(string));
    
            var transDescriptionParameter = transDescription != null ?
                new ObjectParameter("TransDescription", transDescription) :
                new ObjectParameter("TransDescription", typeof(string));
    
            var orgDocNumberParameter = orgDocNumber != null ?
                new ObjectParameter("OrgDocNumber", orgDocNumber) :
                new ObjectParameter("OrgDocNumber", typeof(string));
    
            var orgRefIdParameter = orgRefId != null ?
                new ObjectParameter("OrgRefId", orgRefId) :
                new ObjectParameter("OrgRefId", typeof(string));
    
            var transDocNumberSequenceParameter = transDocNumberSequence != null ?
                new ObjectParameter("TransDocNumberSequence", transDocNumberSequence) :
                new ObjectParameter("TransDocNumberSequence", typeof(string));
    
            var orgIdParameter = orgId != null ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(string));
    
            var transDocOriginCodeParameter = transDocOriginCode != null ?
                new ObjectParameter("TransDocOriginCode", transDocOriginCode) :
                new ObjectParameter("TransDocOriginCode", typeof(string));
    
            var useDaFISParameter = useDaFIS.HasValue ?
                new ObjectParameter("UseDaFIS", useDaFIS) :
                new ObjectParameter("UseDaFIS", typeof(bool));
    
            var isDebugParameter = isDebug.HasValue ?
                new ObjectParameter("IsDebug", isDebug) :
                new ObjectParameter("IsDebug", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BudgetAdjustmentUploadDataResults>("usp_GetBudgetAdjustmentUploadDataForOrg", fiscalYearParameter, fiscalPeriodParameter, transDescriptionParameter, orgDocNumberParameter, orgRefIdParameter, transDocNumberSequenceParameter, orgIdParameter, transDocOriginCodeParameter, useDaFISParameter, isDebugParameter);
        }
    }
}
